name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  go-build:
    name: Build and Test Go Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./code/edge-gateway
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
        
    - name: Install dependencies
      run: go mod download
      
    - name: Verify dependencies
      run: go mod verify
      
    - name: Build
      run: go build -v ./...
      
    - name: Test
      run: go test -v ./...
      
    - name: Lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m
        working-directory: ./code/edge-gateway
        
    - name: Coverage
      run: |
        go test -race -coverprofile=coverage.out -covermode=atomic ./...
        go tool cover -html=coverage.out -o coverage.html
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: go-coverage-report
        path: ./code/edge-gateway/coverage.html
        
  node-build:
    name: Build and Test Node.js Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./code
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './code/package-lock.json'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Lint
      run: npm run lint
      
    - name: Build
      run: npm run build
      
    - name: Test
      run: npm test
      
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: ./code/dist
        
  smart-contracts:
    name: Build and Test Smart Contracts
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./code/contracts
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './code/contracts/package-lock.json'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Compile contracts
      run: npx hardhat compile
      
    - name: Test contracts
      run: npx hardhat test
      
    - name: Run contract coverage
      run: npx hardhat coverage
      
    - name: Upload contract artifacts
      uses: actions/upload-artifact@v3
      with:
        name: contract-artifacts
        path: ./code/contracts/artifacts
        
  docker:
    name: Build and Push Docker Images
    needs: [go-build, node-build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}/edge-gateway
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=sha,format=short
          
    - name: Build and push Edge Gateway image
      uses: docker/build-push-action@v4
      with:
        context: ./code/edge-gateway
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max